
       _                              _                       _   _    _                        
      | |                            | |                     | | | |  (_)                       
  ___ | |__    ___   ___  ___   ___  | |__    ___   __ _   __| | | |_  _  _ __ ___    ___  _ __ 
 / __|| '_ \  / _ \ / _ \/ __| / _ \ | '_ \  / _ \ / _` | / _` | | __|| || '_ ` _ \  / _ \| '__|
| (__ | | | ||  __/|  __/\__ \|  __/ | | | ||  __/| (_| || (_| | | |_ | || | | | | ||  __/| |   
 \___||_| |_| \___| \___||___/ \___| |_| |_| \___| \__,_| \__,_|  \__||_||_| |_| |_| \___||_|   
                                                                                          
state-driven control line; line motor timer

this is a device used for electric power control line airplanes The idea is to change the speed of the motor based on the pitch and roll of the airplane.

The target is an Arduino and uses SPI, connected MPU6050 IMU chip to measure attitude.
it has onboard storage of setup data and a serial terminal-based menu. it uses the servo lib and task scheduler

**Wire is for SPI connection **

#include <Servo.h> #include <EEPROM.h> #include <MPU6050_tockn.h> #include <Wire.h>

the speed function works like this

speed command = speed set point + K1 * sin ( pitch angle) + K2 *abs (sine (roll angle))

K1 and K2 are constants in save in the program.
the sensor is set up so that the pitch and roll angles are zero when in level flight attitude.

the sine function will be implemented as a lookup table the system is controlled by a state machine and stated by a push button
sine function replaced by a small 36-row lookup table.  

Waiting--> ramp up--> flying--> ranp down --> landing --> back to waiting

This project runs on an Arduino nano, but code sizes are pushing the limit. 
